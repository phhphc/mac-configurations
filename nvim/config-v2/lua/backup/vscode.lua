local vscode = require("vscode")
local map = vim.keymap.set

-- fix vscode unfold on cursor error, not sure why using lua map it does not work
vim.cmd("nmap j gj")
vim.cmd("nmap k gk")

map("n", "gz", function()
	require("vscode").action("editor.fold")
end, { desc = "fold" })

map("n", "<leader>n", "<cmd>nohl<cr>", { desc = "no hightlight", silent = true })
map("n", "<C-o>", function()
	vscode.action("workbench.action.navigateBack")
end, { desc = "back" })
map("n", "<C-i>", function()
	vscode.action("workbench.action.navigateForward")
end, { desc = "forward" })
map("n", "gy", function()
	vscode.action("editor.action.goToTypeDefinition")
end, { desc = "go to type definition" })
map("n", "gr", function()
	vscode.action("editor.action.referenceSearch.trigger")
end, { desc = "reference search" })
map("n", "gi", function()
	vscode.action("editor.action.goToImplementation")
end, { desc = "go to implementation" })
map("n", "K", function()
	vscode.action("editor.action.showHover")
end, { desc = "show hover" })
map("n", "gl", function()
	vscode.action("editor.action.showHover")
end, { desc = "show language error" })

map("n", "]d", function()
	vscode.action("editor.action.marker.next")
end, { desc = "next error" })
map("n", "[d", function()
	vscode.action("editor.action.marker.prev")
end, { desc = "previous error" })

map("n", "\\", function()
	vscode.action("workbench.action.splitEditorDown")
end, { desc = "split down" })
map("n", "|", function()
	vscode.action("workbench.action.splitEditorRight")
end, { desc = "split right" })

map("n", "<C-h>", function()
	vscode.action("workbench.action.focusLeftGroup")
end, { desc = "focus left" })
map("n", "<C-j>", function()
	vscode.action("workbench.action.focusBelowGroup")
end, { desc = "focus below" })
map("n", "<C-k>", function()
	vscode.action("workbench.action.focusAboveGroup")
end, { desc = "focus above" })
map("n", "<C-l>", function()
	vscode.action("workbench.action.focusRightGroup")
end, { desc = "focus right" })

map("n", "<leader>w", function()
	vscode.action("workbench.action.files.save")
end, { desc = "save" })
map("n", "<leader>W", function()
	vscode.action("workbench.action.files.saveAll")
end, { desc = "save all" })

map("n", "<leader>lf", function()
	vscode.action("editor.action.formatDocument")
end, { desc = "format document" })
map("n", "<leader>la", function()
	vscode.action("editor.action.quickFix")
end, { desc = "quick fix" })
map("n", "<leader>lr", function()
	vscode.action("editor.action.rename")
end, { desc = "rename" })

map("n", "<leader>/", function()
	vscode.action("editor.action.commentLine")
end, { desc = "comment line" })

map("n", "<leader>c", function()
	vscode.action("workbench.action.closeActiveEditor")
end, { desc = "close active editor" })
map("n", "<leader>q", function()
	vscode.action("workbench.action.closeGroup")
end, { desc = "close group" })
map("n", "<leader>Q", function()
	vscode.action("workbench.action.closeFolder")
end, { desc = "close folder" })

map("n", "<leader>ff", function()
	vscode.action("workbench.action.quickOpen")
end, { desc = "quick open" })
map("n", "<leader>o", function()
	vscode.action("workbench.action.showAllEditors")
end, { desc = "show all editors" })

map("n", "<leader>e", function()
	vscode.action("workbench.view.explorer")
end, { desc = "explorer" })
map("n", "<leader>fw", function()
	vscode.action("workbench.view.search")
end, { desc = "search" })

map("n", "gd", function()
	vscode.action("editor.action.revealDefinition")
end, { desc = "go to definition" })

map("v", "<leader>/", function()
	vscode.action("editor.action.commentLine")
end, { desc = "comment line" })
